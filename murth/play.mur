_start:
  16 $notelength storeglobal ; default notelength
  ret ; no default processing here

midinote: ; reaction to midi note on
        ; [channel velocity note]
  in2dp ; [c v dp]
  load0 ; [c v dp p]
  02 :noteosc spawn ; spawn new core with [dp p] stack
  load0 load1 emit
  ret

noteosc:  ; note oscillator
          ; [dp p]
  $notelength loadglobal ; [dp p T]
  imulticks   ; [dp p T=T*tick_samples]
  dup         ; [dp p T T]
  storettl    ; [dp p T]
  -1.0 swap    ; [dp p -1.0 T]
  float fdiv  ; [dp p da=-1.0/T]
  fload1      ; [dp p da a=1.0]
  swap2       ; [da a dp p]
noteoscloop:
  faddnp  ; [da a dp p=p+dp]
  fphase
  dup     ; [da a dp p p]
  ;fsin    ; [da a dp p sin(p)]
  ;dup fmul dup fmul dup fmul
  ;dup fsign swap fsin fadd
  ;fsign
  abs 2.5 fmul 1.0 fsub fclamp
  0.5 fmul
  04 get fmul
  load0 loadglobal fadd
  fclamp
  load0 storeglobal pop
  swap2 
  faddnp
  swap2
  yield
  :noteoscloop jmp

ctrl_notelength: ; set next notes length
    ; [channel control value]
  $notelength storeglobal
  emit
  ret