_start:
  08 $sinelength storeglobal pop
  08 $trilength storeglobal pop
  08 $sqlength storeglobal pop
  00 $trivol storeglobal pop
  00 $sinevol storeglobal pop
  00 $sqvol storeglobal pop
  00 $delay0wet storeglobal pop
  00 $delay1wet storeglobal pop
  04 $delayM storeglobal pop
  00 $delayMwet storeglobal pop
  load0 :seqtri   spawn
  load0 :seqsine  spawn
  load0 :seqsq    spawn
mainloop:
  
  $notes0 loadglobal
  12 imulticks @notes0delay loadsamplerd
  $delay0wet loadglobal fmul fadd
  @notes0delay storesampler
  
  $notes1 loadglobal
  24 imulticks @notes1delay loadsamplerd
  $delay1wet loadglobal fmul fadd
  @notes1delay storesampler
  
  fadd
  0.3 fmul
  fclamp

  $delayM imulticks @delayM loadsamplerd
  $delayMwet loadglobal fmul fadd
  @delayM storesampler

  load0 storeglobal pop
  $notes0 clearglobal
  $notes1 clearglobal
  yield :mainloop jmp

midinote: ; reaction to midi note on
        ; [channel velocity note]
  01 :triosc spawn ; spawn new core with [n] stack
  ret

sineosc:  ; note oscillator
          ; [n]
  dup load0 swap emit
  in2dp   ; [dp]
  load0   ; [dp p]
  $sinelength loadglobal ; [dp p T]
  imulticks   ; [dp p T=T*tick_samples]
  dup         ; [dp p T T]
  storettl    ; [dp p T]
  -1.0 swap   ; [dp p -1.0 T]
  float fdiv  ; [dp p da=-1.0/T]
  fload1      ; [dp p da a=1.0]
  swap2       ; [da a dp p]
sineoscloop:
  faddnp  ; [da a dp p=p+dp]
  fphase
  dup     ; [da a dp p p]
  fsin    ; [da a dp p sin(p)]
  04 get fmul
  $sinevol loadglobal fmul
  $notes0 faddglobal pop
  swap2 
  faddnp
  swap2
  yield :sineoscloop jmp

triosc:  ; note oscillator
          ; [n]
  dup load0 swap emit
  in2dp   ; [dp]
  load0   ; [dp p]
  $trilength loadglobal ; [dp p T]
  imulticks   ; [dp p T=T*tick_samples]
  dup         ; [dp p T T]
  storettl    ; [dp p T]
  -1.0 swap   ; [dp p -1.0 T]
  float fdiv  ; [dp p da=-1.0/T]
  fload1      ; [dp p da a=1.0]
  swap2       ; [da a dp p]
trioscloop:
  faddnp  ; [da a dp p=p+dp]
  fphase
  dup     ; [da a dp p p]
  abs 2.5 fmul 1.0 fsub fclamp
  04 get fmul
  $trivol loadglobal fmul
  $notes0 faddglobal pop
  swap2
  faddnp
  swap2
  yield :trioscloop jmp

sqosc:  ; note oscillator
  ; [n]
  dup load0 swap emit
  in2dp       ; [dp]
  load0       ; [dp p]
  $sqlength loadglobal ; [dp p T]
  imulticks   ; [dp p T=T*tick_samples]
  dup         ; [dp p T T]
  storettl    ; [dp p T]
  -1.0 swap   ; [dp p -1.0 T]
  float fdiv  ; [dp p da=-1.0/T]
  fload1      ; [dp p da a=1.0]
  swap2       ; [da a dp p]
sqoscloop:
  faddnp  ; [da a dp p=p+dp]
  fphase
  dup     ; [da a dp p p]
  fsign
  04 get fmul
  $sqvol loadglobal fmul
  $notes1 faddglobal pop
  swap2
  faddnp
  swap2
  yield :sqoscloop jmp

ctrl_notelength: ; set next notes length
    ; [channel control value]
  $note0length storeglobal
  emit
  ret

midi_trivol: float127 $trivol storeglobal ret
midi_sinevol: float127 $sinevol storeglobal ret
midi_sqvol: float127 $sqvol storeglobal ret
midi_delay0wet: float127 $delay0wet storeglobal ret
midi_delay1wet: float127 $delay1wet storeglobal ret
midi_delayMwet: float127 $delayMwet storeglobal ret
midi_delayM: $delayM storeglobal ret

seqtri:
  -1 storettl
seqtriloop:
  53 01 :triosc spawn 08 imulticks idle
  51 01 :triosc spawn 08 imulticks idle
  48 01 :triosc spawn 08 imulticks idle
  46 01 :triosc spawn 08 imulticks idle
  :seqtriloop jmp

seqsine:
  -1 storettl
seqsineloop:
  46 01 :sineosc spawn 08 imulticks idle
  41 01 :sineosc spawn 08 imulticks idle
  39 01 :sineosc spawn 08 imulticks idle
  36 01 :sineosc spawn 08 imulticks idle
  :seqsineloop jmp

seqsq:
  -1 storettl
seqsqloop:
  29 01 :sqosc spawn 16 imulticks idle
  34 01 :sqosc spawn 16 imulticks idle
  32 01 :sqosc spawn 16 imulticks idle
  36 01 :sqosc spawn 16 imulticks idle
  34 01 :sqosc spawn 24 imulticks idle
  39 01 :sqosc spawn 08 imulticks idle
  36 01 :sqosc spawn 08 imulticks idle
  34 01 :sqosc spawn 08 imulticks idle
  32 01 :sqosc spawn 16 imulticks idle
  :seqsqloop jmp
